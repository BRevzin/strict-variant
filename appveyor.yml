# Operating system (build VM template)
os: Visual Studio 2015

# build platform, i.e. Win32 (instead of x86), x64, Any CPU. This setting is optional.
# platform: 
# - Win32
# - x64

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
clone_folder: C:\projects\strict_variant

# fetch repository as zip archive
shallow_clone: true                 # default is "false"

branches:
  only: 
   - master

build: off

install:
  - ps: >-
      If($true) {
        function Retry-Command
        {
            param (
            [Parameter(Mandatory=$true)][string]$command, 
            [Parameter(Mandatory=$true)][hashtable]$args, 
            [Parameter(Mandatory=$false)][int]$retries = 5, 
            [Parameter(Mandatory=$false)][int]$secondsDelay = 2
            )
    
            # Setting ErrorAction to Stop is important. This ensures any errors that occur in the command are 
            # treated as terminating errors, and will be caught by the catch block.
            $args.ErrorAction = "Stop"
    
            $retrycount = 0
            $completed = $false

            while (-not $completed) {
                try {
                    & $command @args
                    Write-Verbose ("Command [{0}] succeeded." -f $command)
                    $completed = $true
                } catch {
                    if ($retrycount -ge $retries) {
                        Write-Verbose ("Command [{0}] failed the maximum number of {1} times." -f $command, $retrycount)
                        throw
                    } else {
                        Write-Verbose ("Command [{0}] failed. Retrying in {1} seconds." -f $command, $secondsDelay)
                        Start-Sleep $secondsDelay
                        $retrycount++
                    }
                }
            }
        }

        Add-Type -assembly "system.io.compression.filesystem"
        Write-Host "Downloading boost..."
        Retry-Command {(new-object net.webclient).DownloadFile("https://sourceforge.net/projects/boost/files/boost/1.60.0/boost_1_60_0.zip", "C:\projects\boost_1_60_0.zip")}
        Write-Host "Extracting boost..."
        [io.compression.zipfile]::ExtractToDirectory("C:\projects\boost_1_60_0.zip", "C:\projects\")
        Set-Location "C:\projects\boost_1_60_0"
        Write-Host "Building boost.build.."
        & ".\bootstrap.bat"
        $env:BOOST_ROOT = "C:\projects\boost_1_60_0"
        $env:Path += ";C:\projects\boost_1_60_0;"
        Set-Location "C:\projects\strict_variant\test"
        Write-Host "Building test executables"
        & b2 --toolset=msvc -d+2
      }

test_script:
  - ps: >-
      If($true) {
        Write-Host "Running test executables.."
        $files = Get-ChildItem C:\projects\strict_variant\test\stage\*.exe
        ForEach($file in $files) {
          Write-Host $file.fullName " ... "
          & $file.fullName
        }
      }
