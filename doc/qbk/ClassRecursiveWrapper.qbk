[section Class template `recursive_wrapper`]

A `recursive_wrapper<T>` represents a ['heap-allocated instance of `T`].

Recursive wrapper is very useful, but you shouldn't
normally create a `recursive_wrapper` yourself, instead that happens internally within a `variant`.

[strict_variant_recursive_wrapper]

[caution After a `recursive_wrapper` is moved from, UB occurs on attempt to dereference it, just like with `std::unique_ptr`.

         This is different from `boost::recursive_wrapper`.

         See [link strict_variant.remarks.implementation_notes Implementation Notes] for a discussion of why it is this way and how `variant` handles this.]

[endsect]
