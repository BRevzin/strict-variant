[library Strict Variant
    [quickbook 1.6]
    [id strict_variant]
    [version 0.3]
    [copyright 2016 Chris Beck]
    [authors [Beck, Chris]]
    [category Containers]
    [purpose Safe and efficient discriminated union container]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[import ../../test/compare.cpp]
[import ../../test/variant.cpp]
[import ../../test/tutorial_basic.cpp]
[import ../../test/tutorial_advanced.cpp]
[import ../../include/strict_variant/conversion_rank.hpp]
[import ../../include/strict_variant/filter_overloads.hpp]
[import ../../include/strict_variant/recursive_wrapper.hpp]
[import ../../include/strict_variant/safely_constructible.hpp]
[import ../../include/strict_variant/safe_arithmetic_conversion.hpp]
[import ../../include/strict_variant/safe_pointer_conversion.hpp]
[import ../../include/strict_variant/variant_compare.hpp]

[/ TODO Fix up this intro more, or make it a copy-paste of the README text.
[include Intro.qbk]
]

[section:overview Overview]
[include Motivation.qbk]
[include Design.qbk]
[endsect]

[section:tutorial Tutorial]
[include BasicUsage.qbk]
[include AdvancedUsage.qbk]
[endsect]

[section:reference Reference]
[include ClassVariant.qbk]
[include ClassVariantComparator.qbk]
[include ClassRecursiveWrapper.qbk]
[include ArithmeticCategory.qbk]
[include ArithmeticRank.qbk]
[include SafeArithmeticConversion.qbk]
[include SafePointerConversion.qbk]
[include SafelyConstructible.qbk]
[include Dominates.qbk]
[include Includes.qbk]
[include Configuration.qbk]
[endsect]

[section:remarks Remarks]
[include Compatibility.qbk]
[include ImplementationNotes.qbk]
[/ removing this section for now, it's not that well written [include Comparison.qbk]]
[include Benchmarks.qbk]
[include FutureDirections.qbk]
[endsect]
