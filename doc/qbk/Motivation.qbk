[section Abstract and Motivation]

[h3 Abstract]

`strict_variant` is a safe and performant discriminated union container, in the
style of `boost::variant`, designed for the C++11 standard.

[h3 Motivation]

The design goals of `strict_variant` are:

* Provide a variant type which is strongly exception safe and never-empty.
* Make it as convenient and easy to use as `boost::variant`.
* Avoid the overhead of copies and dynamic allocations to the extent
  possible within these constraints.
* Favor an implementation which will be easy for the programmer to understand.
* Avoid "unexpected" and/or non-portable implicit conversions of fundamental
  types during variant assignment, to increase type-safety when using the variant.

[endsect]
